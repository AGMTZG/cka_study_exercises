apiVersion: v1
kind: Namespace
metadata:
  name: mercury
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: mercury
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
        role: frontend
    spec:
      containers:
      - name: client-container
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              echo "[frontend] Requesting data from backend...";
              curl --connect-timeout 2 --max-time 3 http://server-service:5678;
              
              echo "[frontend] Sending log to logger...";
              curl -X POST http://logger-service:9880 -H "Content-Type: application/json" -d '{"log":"Log from frontend"}'
              sleep 10;
            done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: mercury
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
        role: backend
    spec:
      containers:
      - name: server-container
        image: python:3-alpine
        command: ["python", "-m", "http.server", "5678"]
        ports:
        - containerPort: 5678
      - name: tools
        image: byrnedo/alpine-curl
        command: ["/bin/sh", "-c"]
        args:
          - |
            while true; do
              echo "Backend sending log to logger...";
              curl -X POST http://logger-service:9880 -H "Content-Type: application/json" -d '{"log":"Log from backend"}'
              sleep 15;
            done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logger
  namespace: mercury
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logger
  template:
    metadata:
      labels:
        app: logger
        role: monitor
    spec:
      containers:
      - name: fluentd
        image: fluent/fluentd:v1.15-1
        ports:
          - containerPort: 9880
        volumeMounts:
          - name: config-volume
            mountPath: /fluentd/etc
      volumes:
      - name: config-volume
        configMap:
          name: fluentd-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: mercury
data:
  fluent.conf: |
    <source>
      @type http
      port 9880
      bind 0.0.0.0
    </source>

    <match **>
      @type stdout
    </match>
---
apiVersion: v1
kind: Service
metadata:
  name: client-service
  namespace: mercury
spec:
  selector:
    app: client
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: mercury
spec:
  selector:
    app: server
  ports:
  - protocol: TCP
    port: 5678
    targetPort: 5678
---
apiVersion: v1
kind: Service
metadata:
  name: logger-service
  namespace: mercury
spec:
  selector:
    app: logger
  ports:
  - protocol: TCP
    port: 9880
    targetPort: 9880
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: inbound-from-client
  namespace: mercury
spec:
  podSelector:
    matchLabels:
      app: server
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: client
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: egress-blocker
  namespace: mercury
spec:
  podSelector:
    matchLabels:
      app: client
  policyTypes:
  - Egress
  egress: []
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-logger-monitoring
  namespace: mercury
spec:
  podSelector:
    matchLabels:
      app: logger
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: client
    - podSelector:
        matchLabels:
          app: server
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: server
